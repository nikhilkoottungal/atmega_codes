
adckuart.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000448  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  00000448  000004dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800064  00800064  000004e0  2**0
                  ALLOC
  3 .stab         00001674  00000000  00000000  000004e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000004c0  00000000  00000000  00001b54  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000a0  00000000  00000000  00002018  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000067d  00000000  00000000  000020b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001dc  00000000  00000000  00002735  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000414  00000000  00000000  00002911  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000bc  00000000  00000000  00002d28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000148  00000000  00000000  00002de4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000028b  00000000  00000000  00002f2c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e4       	ldi	r30, 0x48	; 72
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 36       	cpi	r26, 0x64	; 100
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a4 e6       	ldi	r26, 0x64	; 100
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a5 36       	cpi	r26, 0x65	; 101
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 b2 00 	call	0x164	; 0x164 <main>
  8a:	0c 94 22 02 	jmp	0x444	; 0x444 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__vector_13>:


volatile unsigned char value;

ISR(USART_RXC_vect)
{
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	8f 93       	push	r24
	
	value=UDR;
  9e:	8c b1       	in	r24, 0x0c	; 12
  a0:	80 93 64 00 	sts	0x0064, r24
	UCSRA=0x40;
  a4:	80 e4       	ldi	r24, 0x40	; 64
  a6:	8b b9       	out	0x0b, r24	; 11
	UDR=value+1;
  a8:	80 91 64 00 	lds	r24, 0x0064
  ac:	8f 5f       	subi	r24, 0xFF	; 255
  ae:	8c b9       	out	0x0c, r24	; 12
	while((UCSRA & 0x40)==0);
  b0:	5e 9b       	sbis	0x0b, 6	; 11
  b2:	fe cf       	rjmp	.-4      	; 0xb0 <__vector_13+0x1e>
}
  b4:	8f 91       	pop	r24
  b6:	0f 90       	pop	r0
  b8:	0f be       	out	0x3f, r0	; 63
  ba:	0f 90       	pop	r0
  bc:	1f 90       	pop	r1
  be:	18 95       	reti

000000c0 <send_char>:


void send_char(volatile unsigned char c)
{
  c0:	cf 93       	push	r28
  c2:	df 93       	push	r29
  c4:	0f 92       	push	r0
  c6:	cd b7       	in	r28, 0x3d	; 61
  c8:	de b7       	in	r29, 0x3e	; 62
  ca:	89 83       	std	Y+1, r24	; 0x01
	
	UCSRA=0x40;
  cc:	80 e4       	ldi	r24, 0x40	; 64
  ce:	8b b9       	out	0x0b, r24	; 11
	UDR=c;
  d0:	89 81       	ldd	r24, Y+1	; 0x01
  d2:	8c b9       	out	0x0c, r24	; 12
	while((UCSRA & 0x40)==0);
  d4:	5e 9b       	sbis	0x0b, 6	; 11
  d6:	fe cf       	rjmp	.-4      	; 0xd4 <send_char+0x14>
}
  d8:	0f 90       	pop	r0
  da:	df 91       	pop	r29
  dc:	cf 91       	pop	r28
  de:	08 95       	ret

000000e0 <prints>:



void prints(char *ptr)
{
  e0:	cf 93       	push	r28
  e2:	df 93       	push	r29
  e4:	ec 01       	movw	r28, r24
	
	while(*ptr)
  e6:	88 81       	ld	r24, Y
  e8:	88 23       	and	r24, r24
  ea:	31 f0       	breq	.+12     	; 0xf8 <prints+0x18>
	while((UCSRA & 0x40)==0);
}



void prints(char *ptr)
  ec:	21 96       	adiw	r28, 0x01	; 1
{
	
	while(*ptr)
	{
		
		send_char(*ptr);
  ee:	0e 94 60 00 	call	0xc0	; 0xc0 <send_char>


void prints(char *ptr)
{
	
	while(*ptr)
  f2:	89 91       	ld	r24, Y+
  f4:	88 23       	and	r24, r24
  f6:	d9 f7       	brne	.-10     	; 0xee <prints+0xe>
	{
		
		send_char(*ptr);
		ptr++;
	}
}
  f8:	df 91       	pop	r29
  fa:	cf 91       	pop	r28
  fc:	08 95       	ret

000000fe <dtoa>:


void dtoa(unsigned int val,char *buf,char n)
{
  fe:	cf 93       	push	r28
 100:	df 93       	push	r29
 102:	eb 01       	movw	r28, r22
	
	buf[n]=0;
 104:	fb 01       	movw	r30, r22
 106:	e4 0f       	add	r30, r20
 108:	f1 1d       	adc	r31, r1
 10a:	10 82       	st	Z, r1
	while(n-->0)
 10c:	44 23       	and	r20, r20
 10e:	99 f0       	breq	.+38     	; 0x136 <dtoa+0x38>
 110:	41 50       	subi	r20, 0x01	; 1
	{
		
		buf[n]=(val%10)+'0';
 112:	2a e0       	ldi	r18, 0x0A	; 10
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	01 c0       	rjmp	.+2      	; 0x11a <dtoa+0x1c>

void dtoa(unsigned int val,char *buf,char n)
{
	
	buf[n]=0;
	while(n-->0)
 118:	45 2f       	mov	r20, r21
	{
		
		buf[n]=(val%10)+'0';
 11a:	fe 01       	movw	r30, r28
 11c:	e4 0f       	add	r30, r20
 11e:	f1 1d       	adc	r31, r1
 120:	b9 01       	movw	r22, r18
 122:	0e 94 0e 02 	call	0x41c	; 0x41c <__udivmodhi4>
 126:	80 5d       	subi	r24, 0xD0	; 208
 128:	80 83       	st	Z, r24
		val=val/10;
 12a:	86 2f       	mov	r24, r22
 12c:	97 2f       	mov	r25, r23

void dtoa(unsigned int val,char *buf,char n)
{
	
	buf[n]=0;
	while(n-->0)
 12e:	54 2f       	mov	r21, r20
 130:	51 50       	subi	r21, 0x01	; 1
 132:	44 23       	and	r20, r20
 134:	89 f7       	brne	.-30     	; 0x118 <dtoa+0x1a>
	{
		
		buf[n]=(val%10)+'0';
		val=val/10;
	}
}
 136:	df 91       	pop	r29
 138:	cf 91       	pop	r28
 13a:	08 95       	ret

0000013c <read_adc>:


int read_adc(int chn)
{
	int val,val1;
	ADMUX=(0x40|(chn & 0x07));
 13c:	87 70       	andi	r24, 0x07	; 7
 13e:	80 64       	ori	r24, 0x40	; 64
 140:	87 b9       	out	0x07, r24	; 7
	ADCSRA=0x85;
 142:	85 e8       	ldi	r24, 0x85	; 133
 144:	86 b9       	out	0x06, r24	; 6
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 146:	85 e3       	ldi	r24, 0x35	; 53
 148:	8a 95       	dec	r24
 14a:	f1 f7       	brne	.-4      	; 0x148 <read_adc+0xc>
 14c:	00 00       	nop
	_delay_us(10);
	ADCSRA|=0x40;
 14e:	36 9a       	sbi	0x06, 6	; 6
	while((ADCSRA & 0x40)==0x40);
 150:	36 99       	sbic	0x06, 6	; 6
 152:	fe cf       	rjmp	.-4      	; 0x150 <read_adc+0x14>
	{
		
		val=ADCL;
 154:	84 b1       	in	r24, 0x04	; 4
 156:	90 e0       	ldi	r25, 0x00	; 0
		val1=ADCH;
 158:	45 b1       	in	r20, 0x05	; 5
		val|=(val1<<8);
 15a:	34 2f       	mov	r19, r20
 15c:	20 e0       	ldi	r18, 0x00	; 0
 15e:	82 2b       	or	r24, r18
 160:	93 2b       	or	r25, r19
		return(val);
	}
}
 162:	08 95       	ret

00000164 <main>:




int main(void)
{
 164:	cf 93       	push	r28
 166:	df 93       	push	r29
 168:	00 d0       	rcall	.+0      	; 0x16a <main+0x6>
 16a:	00 d0       	rcall	.+0      	; 0x16c <main+0x8>
 16c:	0f 92       	push	r0
 16e:	cd b7       	in	r28, 0x3d	; 61
 170:	de b7       	in	r29, 0x3e	; 62
	float a=0;
	char dispbuf[5];
	UBRRH=0;
 172:	10 bc       	out	0x20, r1	; 32
	UBRRL=103;
 174:	87 e6       	ldi	r24, 0x67	; 103
 176:	89 b9       	out	0x09, r24	; 9
	
	UCSRA=0x00;
 178:	1b b8       	out	0x0b, r1	; 11
	UCSRB=0x98;
 17a:	88 e9       	ldi	r24, 0x98	; 152
 17c:	8a b9       	out	0x0a, r24	; 10
	UCSRC=0x86;
 17e:	86 e8       	ldi	r24, 0x86	; 134
 180:	80 bd       	out	0x20, r24	; 32
	sei();
 182:	78 94       	sei
    while(1)
    {
       a=4.88*read_adc(2);
	    dtoa(a,dispbuf,5);
		prints(dispbuf);
		prints("\r \n");
 184:	00 e6       	ldi	r16, 0x60	; 96
 186:	10 e0       	ldi	r17, 0x00	; 0
	sei();
	//prints("hello");
	
    while(1)
    {
       a=4.88*read_adc(2);
 188:	82 e0       	ldi	r24, 0x02	; 2
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	0e 94 9e 00 	call	0x13c	; 0x13c <read_adc>
 190:	9c 01       	movw	r18, r24
 192:	b9 01       	movw	r22, r18
 194:	88 27       	eor	r24, r24
 196:	77 fd       	sbrc	r23, 7
 198:	80 95       	com	r24
 19a:	98 2f       	mov	r25, r24
 19c:	0e 94 1f 01 	call	0x23e	; 0x23e <__floatsisf>
 1a0:	26 ef       	ldi	r18, 0xF6	; 246
 1a2:	38 e2       	ldi	r19, 0x28	; 40
 1a4:	4c e9       	ldi	r20, 0x9C	; 156
 1a6:	50 e4       	ldi	r21, 0x40	; 64
 1a8:	0e 94 83 01 	call	0x306	; 0x306 <__mulsf3>
	    dtoa(a,dispbuf,5);
 1ac:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <__fixunssfsi>
 1b0:	dc 01       	movw	r26, r24
 1b2:	cb 01       	movw	r24, r22
 1b4:	be 01       	movw	r22, r28
 1b6:	6f 5f       	subi	r22, 0xFF	; 255
 1b8:	7f 4f       	sbci	r23, 0xFF	; 255
 1ba:	45 e0       	ldi	r20, 0x05	; 5
 1bc:	0e 94 7f 00 	call	0xfe	; 0xfe <dtoa>
		prints(dispbuf);
 1c0:	ce 01       	movw	r24, r28
 1c2:	01 96       	adiw	r24, 0x01	; 1
 1c4:	0e 94 70 00 	call	0xe0	; 0xe0 <prints>
		prints("\r \n");
 1c8:	c8 01       	movw	r24, r16
 1ca:	0e 94 70 00 	call	0xe0	; 0xe0 <prints>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ce:	8f ef       	ldi	r24, 0xFF	; 255
 1d0:	99 e6       	ldi	r25, 0x69	; 105
 1d2:	a8 e1       	ldi	r26, 0x18	; 24
 1d4:	81 50       	subi	r24, 0x01	; 1
 1d6:	90 40       	sbci	r25, 0x00	; 0
 1d8:	a0 40       	sbci	r26, 0x00	; 0
 1da:	e1 f7       	brne	.-8      	; 0x1d4 <main+0x70>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <main+0x7a>
 1de:	00 00       	nop
 1e0:	d3 cf       	rjmp	.-90     	; 0x188 <main+0x24>

000001e2 <__fixunssfsi>:
 1e2:	70 d0       	rcall	.+224    	; 0x2c4 <__fp_splitA>
 1e4:	88 f0       	brcs	.+34     	; 0x208 <__fixunssfsi+0x26>
 1e6:	9f 57       	subi	r25, 0x7F	; 127
 1e8:	90 f0       	brcs	.+36     	; 0x20e <__fixunssfsi+0x2c>
 1ea:	b9 2f       	mov	r27, r25
 1ec:	99 27       	eor	r25, r25
 1ee:	b7 51       	subi	r27, 0x17	; 23
 1f0:	a0 f0       	brcs	.+40     	; 0x21a <__fixunssfsi+0x38>
 1f2:	d1 f0       	breq	.+52     	; 0x228 <__fixunssfsi+0x46>
 1f4:	66 0f       	add	r22, r22
 1f6:	77 1f       	adc	r23, r23
 1f8:	88 1f       	adc	r24, r24
 1fa:	99 1f       	adc	r25, r25
 1fc:	1a f0       	brmi	.+6      	; 0x204 <__fixunssfsi+0x22>
 1fe:	ba 95       	dec	r27
 200:	c9 f7       	brne	.-14     	; 0x1f4 <__fixunssfsi+0x12>
 202:	12 c0       	rjmp	.+36     	; 0x228 <__fixunssfsi+0x46>
 204:	b1 30       	cpi	r27, 0x01	; 1
 206:	81 f0       	breq	.+32     	; 0x228 <__fixunssfsi+0x46>
 208:	77 d0       	rcall	.+238    	; 0x2f8 <__fp_zero>
 20a:	b1 e0       	ldi	r27, 0x01	; 1
 20c:	08 95       	ret
 20e:	74 c0       	rjmp	.+232    	; 0x2f8 <__fp_zero>
 210:	67 2f       	mov	r22, r23
 212:	78 2f       	mov	r23, r24
 214:	88 27       	eor	r24, r24
 216:	b8 5f       	subi	r27, 0xF8	; 248
 218:	39 f0       	breq	.+14     	; 0x228 <__fixunssfsi+0x46>
 21a:	b9 3f       	cpi	r27, 0xF9	; 249
 21c:	cc f3       	brlt	.-14     	; 0x210 <__fixunssfsi+0x2e>
 21e:	86 95       	lsr	r24
 220:	77 95       	ror	r23
 222:	67 95       	ror	r22
 224:	b3 95       	inc	r27
 226:	d9 f7       	brne	.-10     	; 0x21e <__fixunssfsi+0x3c>
 228:	3e f4       	brtc	.+14     	; 0x238 <__fixunssfsi+0x56>
 22a:	90 95       	com	r25
 22c:	80 95       	com	r24
 22e:	70 95       	com	r23
 230:	61 95       	neg	r22
 232:	7f 4f       	sbci	r23, 0xFF	; 255
 234:	8f 4f       	sbci	r24, 0xFF	; 255
 236:	9f 4f       	sbci	r25, 0xFF	; 255
 238:	08 95       	ret

0000023a <__floatunsisf>:
 23a:	e8 94       	clt
 23c:	09 c0       	rjmp	.+18     	; 0x250 <__floatsisf+0x12>

0000023e <__floatsisf>:
 23e:	97 fb       	bst	r25, 7
 240:	3e f4       	brtc	.+14     	; 0x250 <__floatsisf+0x12>
 242:	90 95       	com	r25
 244:	80 95       	com	r24
 246:	70 95       	com	r23
 248:	61 95       	neg	r22
 24a:	7f 4f       	sbci	r23, 0xFF	; 255
 24c:	8f 4f       	sbci	r24, 0xFF	; 255
 24e:	9f 4f       	sbci	r25, 0xFF	; 255
 250:	99 23       	and	r25, r25
 252:	a9 f0       	breq	.+42     	; 0x27e <__floatsisf+0x40>
 254:	f9 2f       	mov	r31, r25
 256:	96 e9       	ldi	r25, 0x96	; 150
 258:	bb 27       	eor	r27, r27
 25a:	93 95       	inc	r25
 25c:	f6 95       	lsr	r31
 25e:	87 95       	ror	r24
 260:	77 95       	ror	r23
 262:	67 95       	ror	r22
 264:	b7 95       	ror	r27
 266:	f1 11       	cpse	r31, r1
 268:	f8 cf       	rjmp	.-16     	; 0x25a <__floatsisf+0x1c>
 26a:	fa f4       	brpl	.+62     	; 0x2aa <__floatsisf+0x6c>
 26c:	bb 0f       	add	r27, r27
 26e:	11 f4       	brne	.+4      	; 0x274 <__floatsisf+0x36>
 270:	60 ff       	sbrs	r22, 0
 272:	1b c0       	rjmp	.+54     	; 0x2aa <__floatsisf+0x6c>
 274:	6f 5f       	subi	r22, 0xFF	; 255
 276:	7f 4f       	sbci	r23, 0xFF	; 255
 278:	8f 4f       	sbci	r24, 0xFF	; 255
 27a:	9f 4f       	sbci	r25, 0xFF	; 255
 27c:	16 c0       	rjmp	.+44     	; 0x2aa <__floatsisf+0x6c>
 27e:	88 23       	and	r24, r24
 280:	11 f0       	breq	.+4      	; 0x286 <__floatsisf+0x48>
 282:	96 e9       	ldi	r25, 0x96	; 150
 284:	11 c0       	rjmp	.+34     	; 0x2a8 <__floatsisf+0x6a>
 286:	77 23       	and	r23, r23
 288:	21 f0       	breq	.+8      	; 0x292 <__floatsisf+0x54>
 28a:	9e e8       	ldi	r25, 0x8E	; 142
 28c:	87 2f       	mov	r24, r23
 28e:	76 2f       	mov	r23, r22
 290:	05 c0       	rjmp	.+10     	; 0x29c <__floatsisf+0x5e>
 292:	66 23       	and	r22, r22
 294:	71 f0       	breq	.+28     	; 0x2b2 <__floatsisf+0x74>
 296:	96 e8       	ldi	r25, 0x86	; 134
 298:	86 2f       	mov	r24, r22
 29a:	70 e0       	ldi	r23, 0x00	; 0
 29c:	60 e0       	ldi	r22, 0x00	; 0
 29e:	2a f0       	brmi	.+10     	; 0x2aa <__floatsisf+0x6c>
 2a0:	9a 95       	dec	r25
 2a2:	66 0f       	add	r22, r22
 2a4:	77 1f       	adc	r23, r23
 2a6:	88 1f       	adc	r24, r24
 2a8:	da f7       	brpl	.-10     	; 0x2a0 <__floatsisf+0x62>
 2aa:	88 0f       	add	r24, r24
 2ac:	96 95       	lsr	r25
 2ae:	87 95       	ror	r24
 2b0:	97 f9       	bld	r25, 7
 2b2:	08 95       	ret

000002b4 <__fp_split3>:
 2b4:	57 fd       	sbrc	r21, 7
 2b6:	90 58       	subi	r25, 0x80	; 128
 2b8:	44 0f       	add	r20, r20
 2ba:	55 1f       	adc	r21, r21
 2bc:	59 f0       	breq	.+22     	; 0x2d4 <__fp_splitA+0x10>
 2be:	5f 3f       	cpi	r21, 0xFF	; 255
 2c0:	71 f0       	breq	.+28     	; 0x2de <__fp_splitA+0x1a>
 2c2:	47 95       	ror	r20

000002c4 <__fp_splitA>:
 2c4:	88 0f       	add	r24, r24
 2c6:	97 fb       	bst	r25, 7
 2c8:	99 1f       	adc	r25, r25
 2ca:	61 f0       	breq	.+24     	; 0x2e4 <__fp_splitA+0x20>
 2cc:	9f 3f       	cpi	r25, 0xFF	; 255
 2ce:	79 f0       	breq	.+30     	; 0x2ee <__fp_splitA+0x2a>
 2d0:	87 95       	ror	r24
 2d2:	08 95       	ret
 2d4:	12 16       	cp	r1, r18
 2d6:	13 06       	cpc	r1, r19
 2d8:	14 06       	cpc	r1, r20
 2da:	55 1f       	adc	r21, r21
 2dc:	f2 cf       	rjmp	.-28     	; 0x2c2 <__fp_split3+0xe>
 2de:	46 95       	lsr	r20
 2e0:	f1 df       	rcall	.-30     	; 0x2c4 <__fp_splitA>
 2e2:	08 c0       	rjmp	.+16     	; 0x2f4 <__fp_splitA+0x30>
 2e4:	16 16       	cp	r1, r22
 2e6:	17 06       	cpc	r1, r23
 2e8:	18 06       	cpc	r1, r24
 2ea:	99 1f       	adc	r25, r25
 2ec:	f1 cf       	rjmp	.-30     	; 0x2d0 <__fp_splitA+0xc>
 2ee:	86 95       	lsr	r24
 2f0:	71 05       	cpc	r23, r1
 2f2:	61 05       	cpc	r22, r1
 2f4:	08 94       	sec
 2f6:	08 95       	ret

000002f8 <__fp_zero>:
 2f8:	e8 94       	clt

000002fa <__fp_szero>:
 2fa:	bb 27       	eor	r27, r27
 2fc:	66 27       	eor	r22, r22
 2fe:	77 27       	eor	r23, r23
 300:	cb 01       	movw	r24, r22
 302:	97 f9       	bld	r25, 7
 304:	08 95       	ret

00000306 <__mulsf3>:
 306:	0b d0       	rcall	.+22     	; 0x31e <__mulsf3x>
 308:	78 c0       	rjmp	.+240    	; 0x3fa <__fp_round>
 30a:	69 d0       	rcall	.+210    	; 0x3de <__fp_pscA>
 30c:	28 f0       	brcs	.+10     	; 0x318 <__mulsf3+0x12>
 30e:	6e d0       	rcall	.+220    	; 0x3ec <__fp_pscB>
 310:	18 f0       	brcs	.+6      	; 0x318 <__mulsf3+0x12>
 312:	95 23       	and	r25, r21
 314:	09 f0       	breq	.+2      	; 0x318 <__mulsf3+0x12>
 316:	5a c0       	rjmp	.+180    	; 0x3cc <__fp_inf>
 318:	5f c0       	rjmp	.+190    	; 0x3d8 <__fp_nan>
 31a:	11 24       	eor	r1, r1
 31c:	ee cf       	rjmp	.-36     	; 0x2fa <__fp_szero>

0000031e <__mulsf3x>:
 31e:	ca df       	rcall	.-108    	; 0x2b4 <__fp_split3>
 320:	a0 f3       	brcs	.-24     	; 0x30a <__mulsf3+0x4>

00000322 <__mulsf3_pse>:
 322:	95 9f       	mul	r25, r21
 324:	d1 f3       	breq	.-12     	; 0x31a <__mulsf3+0x14>
 326:	95 0f       	add	r25, r21
 328:	50 e0       	ldi	r21, 0x00	; 0
 32a:	55 1f       	adc	r21, r21
 32c:	62 9f       	mul	r22, r18
 32e:	f0 01       	movw	r30, r0
 330:	72 9f       	mul	r23, r18
 332:	bb 27       	eor	r27, r27
 334:	f0 0d       	add	r31, r0
 336:	b1 1d       	adc	r27, r1
 338:	63 9f       	mul	r22, r19
 33a:	aa 27       	eor	r26, r26
 33c:	f0 0d       	add	r31, r0
 33e:	b1 1d       	adc	r27, r1
 340:	aa 1f       	adc	r26, r26
 342:	64 9f       	mul	r22, r20
 344:	66 27       	eor	r22, r22
 346:	b0 0d       	add	r27, r0
 348:	a1 1d       	adc	r26, r1
 34a:	66 1f       	adc	r22, r22
 34c:	82 9f       	mul	r24, r18
 34e:	22 27       	eor	r18, r18
 350:	b0 0d       	add	r27, r0
 352:	a1 1d       	adc	r26, r1
 354:	62 1f       	adc	r22, r18
 356:	73 9f       	mul	r23, r19
 358:	b0 0d       	add	r27, r0
 35a:	a1 1d       	adc	r26, r1
 35c:	62 1f       	adc	r22, r18
 35e:	83 9f       	mul	r24, r19
 360:	a0 0d       	add	r26, r0
 362:	61 1d       	adc	r22, r1
 364:	22 1f       	adc	r18, r18
 366:	74 9f       	mul	r23, r20
 368:	33 27       	eor	r19, r19
 36a:	a0 0d       	add	r26, r0
 36c:	61 1d       	adc	r22, r1
 36e:	23 1f       	adc	r18, r19
 370:	84 9f       	mul	r24, r20
 372:	60 0d       	add	r22, r0
 374:	21 1d       	adc	r18, r1
 376:	82 2f       	mov	r24, r18
 378:	76 2f       	mov	r23, r22
 37a:	6a 2f       	mov	r22, r26
 37c:	11 24       	eor	r1, r1
 37e:	9f 57       	subi	r25, 0x7F	; 127
 380:	50 40       	sbci	r21, 0x00	; 0
 382:	8a f0       	brmi	.+34     	; 0x3a6 <__mulsf3_pse+0x84>
 384:	e1 f0       	breq	.+56     	; 0x3be <__mulsf3_pse+0x9c>
 386:	88 23       	and	r24, r24
 388:	4a f0       	brmi	.+18     	; 0x39c <__mulsf3_pse+0x7a>
 38a:	ee 0f       	add	r30, r30
 38c:	ff 1f       	adc	r31, r31
 38e:	bb 1f       	adc	r27, r27
 390:	66 1f       	adc	r22, r22
 392:	77 1f       	adc	r23, r23
 394:	88 1f       	adc	r24, r24
 396:	91 50       	subi	r25, 0x01	; 1
 398:	50 40       	sbci	r21, 0x00	; 0
 39a:	a9 f7       	brne	.-22     	; 0x386 <__mulsf3_pse+0x64>
 39c:	9e 3f       	cpi	r25, 0xFE	; 254
 39e:	51 05       	cpc	r21, r1
 3a0:	70 f0       	brcs	.+28     	; 0x3be <__mulsf3_pse+0x9c>
 3a2:	14 c0       	rjmp	.+40     	; 0x3cc <__fp_inf>
 3a4:	aa cf       	rjmp	.-172    	; 0x2fa <__fp_szero>
 3a6:	5f 3f       	cpi	r21, 0xFF	; 255
 3a8:	ec f3       	brlt	.-6      	; 0x3a4 <__mulsf3_pse+0x82>
 3aa:	98 3e       	cpi	r25, 0xE8	; 232
 3ac:	dc f3       	brlt	.-10     	; 0x3a4 <__mulsf3_pse+0x82>
 3ae:	86 95       	lsr	r24
 3b0:	77 95       	ror	r23
 3b2:	67 95       	ror	r22
 3b4:	b7 95       	ror	r27
 3b6:	f7 95       	ror	r31
 3b8:	e7 95       	ror	r30
 3ba:	9f 5f       	subi	r25, 0xFF	; 255
 3bc:	c1 f7       	brne	.-16     	; 0x3ae <__mulsf3_pse+0x8c>
 3be:	fe 2b       	or	r31, r30
 3c0:	88 0f       	add	r24, r24
 3c2:	91 1d       	adc	r25, r1
 3c4:	96 95       	lsr	r25
 3c6:	87 95       	ror	r24
 3c8:	97 f9       	bld	r25, 7
 3ca:	08 95       	ret

000003cc <__fp_inf>:
 3cc:	97 f9       	bld	r25, 7
 3ce:	9f 67       	ori	r25, 0x7F	; 127
 3d0:	80 e8       	ldi	r24, 0x80	; 128
 3d2:	70 e0       	ldi	r23, 0x00	; 0
 3d4:	60 e0       	ldi	r22, 0x00	; 0
 3d6:	08 95       	ret

000003d8 <__fp_nan>:
 3d8:	9f ef       	ldi	r25, 0xFF	; 255
 3da:	80 ec       	ldi	r24, 0xC0	; 192
 3dc:	08 95       	ret

000003de <__fp_pscA>:
 3de:	00 24       	eor	r0, r0
 3e0:	0a 94       	dec	r0
 3e2:	16 16       	cp	r1, r22
 3e4:	17 06       	cpc	r1, r23
 3e6:	18 06       	cpc	r1, r24
 3e8:	09 06       	cpc	r0, r25
 3ea:	08 95       	ret

000003ec <__fp_pscB>:
 3ec:	00 24       	eor	r0, r0
 3ee:	0a 94       	dec	r0
 3f0:	12 16       	cp	r1, r18
 3f2:	13 06       	cpc	r1, r19
 3f4:	14 06       	cpc	r1, r20
 3f6:	05 06       	cpc	r0, r21
 3f8:	08 95       	ret

000003fa <__fp_round>:
 3fa:	09 2e       	mov	r0, r25
 3fc:	03 94       	inc	r0
 3fe:	00 0c       	add	r0, r0
 400:	11 f4       	brne	.+4      	; 0x406 <__fp_round+0xc>
 402:	88 23       	and	r24, r24
 404:	52 f0       	brmi	.+20     	; 0x41a <__fp_round+0x20>
 406:	bb 0f       	add	r27, r27
 408:	40 f4       	brcc	.+16     	; 0x41a <__fp_round+0x20>
 40a:	bf 2b       	or	r27, r31
 40c:	11 f4       	brne	.+4      	; 0x412 <__fp_round+0x18>
 40e:	60 ff       	sbrs	r22, 0
 410:	04 c0       	rjmp	.+8      	; 0x41a <__fp_round+0x20>
 412:	6f 5f       	subi	r22, 0xFF	; 255
 414:	7f 4f       	sbci	r23, 0xFF	; 255
 416:	8f 4f       	sbci	r24, 0xFF	; 255
 418:	9f 4f       	sbci	r25, 0xFF	; 255
 41a:	08 95       	ret

0000041c <__udivmodhi4>:
 41c:	aa 1b       	sub	r26, r26
 41e:	bb 1b       	sub	r27, r27
 420:	51 e1       	ldi	r21, 0x11	; 17
 422:	07 c0       	rjmp	.+14     	; 0x432 <__udivmodhi4_ep>

00000424 <__udivmodhi4_loop>:
 424:	aa 1f       	adc	r26, r26
 426:	bb 1f       	adc	r27, r27
 428:	a6 17       	cp	r26, r22
 42a:	b7 07       	cpc	r27, r23
 42c:	10 f0       	brcs	.+4      	; 0x432 <__udivmodhi4_ep>
 42e:	a6 1b       	sub	r26, r22
 430:	b7 0b       	sbc	r27, r23

00000432 <__udivmodhi4_ep>:
 432:	88 1f       	adc	r24, r24
 434:	99 1f       	adc	r25, r25
 436:	5a 95       	dec	r21
 438:	a9 f7       	brne	.-22     	; 0x424 <__udivmodhi4_loop>
 43a:	80 95       	com	r24
 43c:	90 95       	com	r25
 43e:	bc 01       	movw	r22, r24
 440:	cd 01       	movw	r24, r26
 442:	08 95       	ret

00000444 <_exit>:
 444:	f8 94       	cli

00000446 <__stop_program>:
 446:	ff cf       	rjmp	.-2      	; 0x446 <__stop_program>
